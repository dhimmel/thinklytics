{
  "comments": [],
  "documents": [
    {
      "body_html": "<p><strong>Executive Summary</strong> <br>While most scientists could benefit from using computational tools in their research, many scientists are not sufficiently computationally savvy to use current advanced tools. An ongoing challenge of Open Science is to enable the broadest community of scientists to use the computational tools necessary to formally document analyses, or manage data, and achieve routine reproducibility of analyses. </p>\r\n\r\n<p>Language workbench technology (LWT) was pioneered by JetBrains (https://www.jetbrains.com) to facilitate the in-house development of integrated development environments for programmers. In 2004, JetBrains open-sourced the MPS language workbench (https://www.jetbrains.com/mps/) to encourage the adoption of LWT in other domains.  Our team has recently shown that LWT is effective to help biologists and clinicians who are not computer savvy perform data analysis. For instance, tools developed with LWT make it possible to train most biologists and clinicians, in just a few hours, how to analyze data about the expression of genes. We have so far taught close to 200 biologists with languages designed with LWT.</p>\r\n\r\n<p>Our experience strongly suggests that LWT is a methodology that can provide a much needed bridge between non computational scientists and computational experts. LWT can facilitate many activities necessary for a widespread adoption of Open Science, supporting routine and seamless reproducibility of data analysis, as well as allowing more technical freedom to test innovations. Importantly, we believe that with LWT, scientists will find it easier to engage in a more inclusive Open Science.</p>\r\n\r\n<p>We propose to (1) apply LWT to test novel ideas to record and credit scientists for contributions of software for data analysis and (2) teach the scientific community about this innovative technology. Our prototype will evaluate alternatives to citing only a few software tools in articles. We anticipate that demonstrating these innovations will inspire the design of future scholarly systems and help promote open-science.</p>\r\n\r\n<p><strong><a href=\"https://www.youtube.com/watch?v=HtN3hwvbR1c\">Short introduction video</a></strong> (5 minutes)</p>\r\n\r\n<p><strong>Our Team.</strong> Our team is composed of an academic laboratory (Fabien Campagne&#8217;s lab, located at the Weill Cornell Medical College, in NYC, USA) and of the JetBrains MPS team (Alexander Shatalin&#8217;s group, at JetBrains Inc., Prague, Czech Republic). Our team strongly believes in and supports open-source, data sharing, and facilitating the process of Open Science by developing novel tools that empower engineers and scientists. Members of our team have practiced openness and Open Science for many years: JetBrains Inc. has been a strong industry contributor to open-source (JetBrains repositories have received more than 10,000 stars on GitHub). The Campagne laboratory also has a history of developing open-source bioinformatics software  and has embraced open-access journals <span class=\"citation\">[<a href=\"/doi/10.1371/journal.pone.0079871\" class=\"citation\" data-key=\"10.1371/journal.pone.0079871\">1</a>, <a href=\"/doi/10.7717/peerj.241\" class=\"citation\" data-key=\"10.7717/peerj.241\">2</a>]</span> and preprints <span class=\"citation\">[<a href=\"/doi/10.7287/peerj.preprints.112v2\" class=\"citation\" data-key=\"10.7287/peerj.preprints.112v2\">3</a>]</span> several years ago (both as an author and as a peer-reviewer and editor: Fabien Campagne serves as an associate editor for PeerJ). </p>\r\n\r\n<p><strong>Open Science.</strong> Open Science is likely to mean different things to different teams. For some, it means practicing science in a completely open way, from early data generation, through data analysis, up to the writing of interpretations for publication in open-access journals, or the deposition of data, and interpretations in  knowledge bases. Some groups, perhaps because they focus on clinical research projects and are cautious about protecting patient populations who do not have scientific or clinical skills, put more insistence on the second half of the scientific process: the publication and data deposition after scientists have built up confidence in their interpretation of the data and summarized the key aspects of the research. For us, Open Science is all these aspects, plus one. We think of Open also as a synonym of Inclusive, and hope for science that is more inclusive of the public, but also more inclusive of scientists across disciplines.</p>\r\n\r\n<p><strong>Our Long Term Goal.</strong> We strongly believe that Open Science is the future of scientific enquiry and aim to speed up its adoption by making it easier and more desirable to practice Open Science than it is to continue with the status quo. </p>\r\n\r\n<p><strong>The Challenge.</strong> Many scientists who would like to adopt Open Science processes in their labs face considerable difficulties because Open Science practices require a high amount of technical sophistication. While some individuals have mastered the current tools of Open Science, and championed its practice, we believe that many more scientists are finding it difficult to learn the technical skills that are necessary to open one&#8217;s science to the world.  </p>\r\n\r\n<p><strong>The Innovation.</strong> We propose to apply language workbench technology (LWT), fully supported by the JetBrains open-source <a href=\"https://www.jetbrains.com/mps/\">Meta Programming System</a> (MPS), to help scientists with the daily practice of Open Science. The Campagne laboratory has recently demonstrated that LWT can be applied to help biologists with limited computational experience perform sophisticated data analyses that would have traditionally required programming or command line skills <span class=\"citation\">[<a href=\"/doi/10.1101/030254\" class=\"citation\" data-key=\"10.1101/030254\">4</a>]</span>. Tools developed with LWT make it possible for biologists to fully participate to data analysis, which promotes inclusive science across disciplines.</p>\r\n\r\n<p><strong>Preliminary Results.</strong> We have shown that LWT makes it possible to design languages for data analysis (<a href=\"#MetaR_Figure\">Figure 1</a>) and reproducible bioinformatics workflows/pipelines (<a href=\"#NextflowWorkbench_Figure\">Figure 2</a>) that are easier to teach to biologists and clinicians than traditional approaches (see <span class=\"citation\">[<a href=\"/doi/10.1101/030254\" class=\"citation\" data-key=\"10.1101/030254\">4</a>]</span>). In the <a href=\"http://metar.campagnelab.org/\">MetaR</a> project, we have designed a simple data analysis language that can be taught to biologists with no programming experience in 2 hours and helps trainees call genes differentially expressed and create heatmap visualizations. We are obtaining similar results teaching NextflowWorkbench to biologists and clinicians (see <a href=\"#NextflowWorkbench_Figure\">Figure 2</a>, and <span class=\"citation\">[<a href=\"/doi/10.1101/041236\" class=\"citation\" data-key=\"10.1101/041236\">5</a>]</span>). These short training sessions are enabled by LWT and attention to detail during language design.</p>\r\n\r\n<a name=\"MetaR_Figure\"></a><div class=\"figure\" figure-id=\"MetaR_Figure\"><div class=\"figure-content\"><img src=\"http://think-lab.s3.amazonaws.com/m/figures/22.png\"></div>\n            <div class=\"signature-1\">\n                <div class=\"figure-title\">Figure 1. Illustration of the MetaR data analysis language.</div>\n                <div class=\"figure-description\"><p> This screen capture shows a differential expression analysis and creation of a heatmap visualization, two common analysis tasks in bioinformatics. Participants to the MetaR training sessions are taught how to perform this analysis with MetaR in less than 2 hours. This language was constructed with Language Workbench Technology (LWT) and was found to substantially accelerate the teaching of data analysis to beginners (biologists and clinicians). </p></div>\n            </div>\n        </div>\r\n\r\n<a name=\"NextflowWorkbench_Figure\"></a><div class=\"figure\" figure-id=\"NextflowWorkbench_Figure\"><div class=\"figure-content\"><img src=\"http://think-lab.s3.amazonaws.com/m/figures/23.png\"></div>\n            <div class=\"signature-1\">\n                <div class=\"figure-title\">Figure 2. Illustration of the NextflowWorkbench pipeline language</div>\n                <div class=\"figure-description\"><p>This screen capture shows an analysis workflow/pipeline that downloads short reads from the <a href=\"http://www.ncbi.nlm.nih.gov/sra\">Short Read Archive at NCBI/NIH</a>, performs quality control on the read files, and estimates counts with <a href=\"https://pachterlab.github.io/kallisto/about.html\">Kallisto</a> before producing a combined matrix of counts. The language to express this workflow was developed with LWT. We have started teaching biologists and clinicians how to develop such pipelines and found that we can teach beginners with no programming or command line experience how to assemble and run the pipeline of the screenshot on their laptop in 2 hrs. This short training time is possible because beginners can use the language as an interactive user-interface, and because we designed the language to seamlessly integrate with docker container technology. Container technology, when coupled with LWT allows beginners to run tools such as fastq-dump or Kallisto without having to know about software compilation and dependency management. We believe that combining these technologies can effectively solve what others have nicknamed the `dependency hell&#8217; (see <a href=\"https://docs.google.com/forms/d/10P299OB_cfwC7zyTBAdddo1Wh9py_vUGcTy-yczQoTU/viewanalytics\">survey</a>). An added advantage of using container technology is that pipelines constructed with LWT and <a href=\"http://workflow.campagnelab.org/\">NextflowWorkbench</a> are reproducible and portable <span class=\"citation\">[<a href=\"/doi/10.1101/041236\" class=\"citation\" data-key=\"10.1101/041236\">5</a>]</span>.</p></div>\n            </div>\n        </div>\r\n\r\n<p>The Key Advantages of LWT for Data Analysis. LWT has several advantages for Data Analysis:</p>\r\n\r\n<ol><li>It can be used to develop computational languages that are easier to teach to biologists and clinicians than programming languages (see Figs 1&amp; 2). LWT makes science more inclusive across disciplines.</li><li>LWT removes the need for monolithic standardization or common specification. Instead, LWT languages can evolve from small individual contributions that work well together by design.</li><li>Languages can include warning and error messages that warn the analyst about very specific conditions. In contrast to programming languages whose compilers report mostly about low-level syntax errors, LWT errors can be defined in a language to warn the user about high-level semantic problems. Such warnings and errors are extremely useful to guide beginners, or remind expert users about conditions known to cause errors or unreliable results.</li><li>Languages developed with LWT can include graphical and tabular notations, or interactive user interface elements. This is particularly useful in scientific applications, as illustrated in Figure 1 and Supp File 1 &amp; 2.  </li><li>Languages developed with LWT can be tightly integrated with other technologies, as shown in Figure 2 with support for docker in the NextflowWorkbench. Such integrations can be presented in a natural way that makes it straightforward for biologists and clinicians to take advantage of otherwise very technical tools and technologies. Biologists who learn NextflowWorkbench need only a 5-minute introduction to docker before they can take advantage of a docker container to write workflows. </li><li>LWT supports source control systems, such as git, in a seamless manner that helps beginners use these tools (see <span class=\"citation\">[<a href=\"/doi/10.7287/peerj.preprints.511v2\" class=\"citation\" data-key=\"10.7287/peerj.preprints.511v2\">6</a>, <a href=\"/doi/10.7717/peerj.800\" class=\"citation\" data-key=\"10.7717/peerj.800\">7</a>]</span>). Source control is a key component of Open Science. By keeping a trace of source control commits, scientists can document what analysis steps they have taken. They can diagnose and trace back problems while working on a study, retrieve specific versions of an analysis, and can release the commits openly at publication time to enables other scientists and the public to follow and understand how a study has been developed.</li></ol>\r\n\r\n<p><strong>LWT for Open Science.</strong> We think that several of the previous points can help scientist open their science because many scientists are struggling with the know-how and minutia required to practice Open Science. As Holly Bik (2015 keynote speaker at the Bioinformatics Open Source Conference) has put it:</p>\r\n\r\n<a name=\"HollyBik_Tweet\"></a><div class=\"figure\" figure-id=\"HollyBik_Tweet\">\n                <table class=\"full-width\" style=\"table-layout: fixed;\"><tr><td style=\"width:50%\">\n                    <div class=\"figure-content\"><img src=\"http://think-lab.s3.amazonaws.com/m/figures/24.png\"></div>\n                </td><td style=\"width:50%\">\n                    \n            <div class=\"signature-2\">\n                <div class=\"figure-title\">Figure 3. Holly Bik's Tweet</div>\n                <div class=\"figure-description\"></div>\n            </div>\n        \n                </td></tr></table>\n            </div>\r\n\r\n<p>Here, the ability of LWT to integrate many technologies, yet offer a seamless and consistent user interface, may enable completely new ways to develop tools to support Open Science. In this proposal, for instance, we will prototype a new way to record credit and associate it with analysis software. We believe that developing better ways to credit scientists and track contributions automatically could drive an accelerated adoption of Open Science. LWT makes it orders of magnitude faster to prototype such ideas and quickly evaluate their impact than would be possible with other techniques.   </p>\r\n\r\n<p><strong>Aims.</strong> In this proposal, we will develop a prototype that (1) pioneer new ways to track contributions and crediting contributors of scientific data analyses. This aim will evaluate new ideas to help crediting data analysts for their contributions to scientific studies. It will make it easier for scientists to share LWT analyses while at the same time helping contributors receive due credit for their work. <br>In aim (2), we will offer training workshops for LWT at other biomedical institutions. This aim will increase the visibility of this new technology and help accelerate its adoption at universities, medical colleges and biotech companies. One day training workshops will combine the MetaR and NextflowWorkbench training sessions currently taught at the Weill Cornell Medical College and extend them to describe the sharing of data analyses.</p>\r\n\r\n<p><strong>Originality.</strong> First, this proposal is original because it will use a technology (LWT) that is not widely known, yet is showing promise in addressing some of the pressing challenges of Open Science (e.g., portability, reproducibility, openness and inclusiveness towards the public and scientists in other disciplines). Second, this proposal is original because it aims to advance Open Science by changing how the contributions of individual scientists are recorded, preserved and presented to other scientists and the public.  Our team believes that Open Science will start to become mainstream when a majority of scientists have realized that openness gets them more credit than the alternatives.   </p>\r\n\r\n<p><strong>Innovations for recording scientific contributions and credit.</strong> We will start working on this aim in Phase I, and will continue to develop and refine the prototype in Phase II. The goal is to demonstrate new ways to (i) record contributions to data analysis in scientific studies and (ii) facilitate crediting scientists and data analysts who have contributed data analysis programs to a study (iii) help scientists and data analysts showcase their contributions and their impact on other studies. </p>\r\n\r\n<p><strong>Need for the innovation.</strong> We believe that the current approach to acknowledging data analysis contributions in scientific publications is not ideal. A first problem is that crediting somebody currently involves judgment calls that PIs make according to their understanding and appreciation of the work of others. A second problem is that credit is often given in the form of authorship or acknowledgement in a publication, and there is no efficient way for a scientist to gather an exhaustive list of all the studies that have used an analysis script or program. Given that various journals limit the maximum number of citations in an article and considering that some analyses require tens of tools, it may not be surprising that references about programs or data analysis tools are frequently dropped from a citation list.<br>Approach: scientific contributions and credit. We will address these problems as follows:</p>\r\n\r\n<ul><li>First, we will attach the identity of a data analyst to the programs that they create (analysts will need to opt-in by providing an <a href=\"http://orcid.org/\">ORCID</a> identifier, or email). Once an analyst has enabled this feature, any analysis or program developed by this analyst will be tagged with contributor meta-data. Contrary to the common practice of signing programs in comment at the top of each file, LWT makes it possible to annotate every statement of an analysis. This is useful to preserve meta-data when statements are copied and pasted across analyses and to automatically merge meta-data for distinct contributions. </li><li>Second, we will implement the ability to publish an analysis to the web and to preserve contribution meta-data in the database. The web front-end will support publishing different versions of an analysis.</li><li>Third, to facilitate reuse, we will support downloading analysis programs directly from the web front-end into MPS. </li><li>Fourth, running an analysis on new data will optionally record usage in the web front-end (no details about the data being processed will be shared). This can be done automatically with LWT because we can control what happens when a user wants to execute an analysis. Records of analysis used and successfully completed with be made in the database and reflected on the web front-end immediately. This will make it possible for scientists to determine the popularity and usage of analysis programs developed with LWT and will help data analysts document the reuse of their contributions. </li><li>Fifth, the system will offer a unique DOI for each version of a published analysis. This DOI will make it possible for authors to include an electronic reference to a specific analysis in manuscripts, preprints and publications. We will encourage scientists to record this information in their manuscripts during the training workshops. Including the analysis DOI will clearly specify the details of how the analysis was conducted and provide a de facto mean for reviewers and future audience to know exactly how the analysis was conducted. We will work with NCBI to add this type of DOI in Medline data under the <a href=\"https://www.nlm.nih.gov/bsd/mms/medlineelements.html#si\">Secondary Source ID</a> field. Contributions will be electronically discoverable to enable integration with third-parties (such as <a href=\"https://impactstory.org/\">ImpactStory</a>).</li></ul>\r\n\r\n<p><strong>Publishing analyses to the web.</strong> LWT programs will be converted to <a href=\"https://www.w3.org/TR/SVG/\">Scalable Vector Graphics</a> (SVG) format. SVG is an appropriate format to display LWT programs on the web because it supports graphics as well as text, is a vectorial format that can be printed at arbitrary resolutions, and <a href=\"http://caniuse.com/#search=svg\">is well supported by most modern browsers</a>. SVG documents will be written to a database, either maintained by the team (either by JetBrains Inc. or the Campagne laboratory at the Weill Cornell&#8217;s Institute for Computational Biomedicine) or hosted by a cloud provider. A web-front end will be developed to serve the SVG at persistent URLs and provide search functionality over the documents. Deliverables will consist of (i) an MPS plugin that any user of the MPS LW can install. The plugin will support publishing one or more analyses to an SVG repository (in technical terms, we will support publishing arbitrary MPS solutions and languages). (ii) a set of docker containers and deployment instructions to configure a running instance of the public DB and web front-end (this will make it possible for others to host their own repository if they wish to do so). (iii) a running SVG repository, which we will maintain as a demonstration system for a minimum of 5 years.  </p>\r\n\r\n<p><strong>Technical feasibility.</strong> Writing text programs is currently a mainstream approach for data analysis. When writing an analysis with LWT, users are effectively assembling a data structure (and seeing parts of it in the MPS user interface). We will use this capability to extend these data structure with meta-data about who created and edited the analysis program. Construction of the web front-end has high feasibility because JetBrains is well versed in working with databases and web technology and because MPS already supports an <a href=\"https://confluence.jetbrains.com/display/MPSD30/Custom+Persistence+Cookbook\">Application Programming Interface (API) for custom persistence</a>. Team members with JetBrains will provide expertise in the internal software architecture of MPS that will speed up the prototype. For web publishing of analyses, SVG documents will be rendered from MPS using code similar to that developed for the <a href=\"https://github.com/CampagneLaboratory/Editor2PDF\">Editor2PDF</a> project (developed by Fabien Campagne to render LWT programs to PDF to inclusion in books and publications). </p>\r\n\r\n<p><strong>Training workshops.</strong> If we are recipients of a Phase I prize, we will advertise training workshops on the <a href=\"http://www.iscb.org/\">ISCB</a> mailing list and seek institutions to host workshops. We will also contact directly past trainees who have taken the training at Weill Cornell and have now established their laboratory at other institutions (in the US and Europe). We will give a minimum of 5 one day training workshops (approximately one workshop a month in Phase I). We will aim to offer workshops on a first request basis, but may modify this order to reach a more diverse community in the US and Europe. Training sessions will continue throughout Phase II if we are recipient of the Prize. We will survey trainees post-training to gather feedback about whether the workshops fulfill expectations (see <a href=\"#Survey_Figure\">Figure 4</a> for survey questions).  </p>\r\n\r\n<p><strong>Long-term sustainability.</strong> The MPS LW has been developed as an open-source project and maintained by JetBrains Inc. since 2004. The software is used internally by JetBrains to develop languages that make it easier to develop commercial products of JetBrains. For this reason, the MPS LW is a sustainable, industry funded, open-source project.  All software developed in this project will be released under the Apache 2.0 software license. Any publications about the prototype will be submitted to open-access journals (e.g., PeerJ, PLOS or BMC journals). </p>\r\n\r\n<a name=\"Survey_Figure\"></a><div class=\"figure\" figure-id=\"Survey_Figure\"><div class=\"figure-content\"><img src=\"http://think-lab.s3.amazonaws.com/m/figures/25.png\"></div>\n            <div class=\"signature-1\">\n                <div class=\"figure-title\">Figure 4. Post-training anonymous survey</div>\n                <div class=\"figure-description\"></div>\n            </div>\n        </div>\r\n\r\n<p>Supplementary File 1. <a href=\"https://www.youtube.com/watch?v=NnqqsqLkwdQ\">MetaR and the NextflowWorkbench Video</a></p>\r\n\r\n<p>Supplementary File 2. <a href=\"https://www.youtube.com/watch?v=QHgHezQFKRY\">NextflowWorkbench Getting Started Video</a></p>\r\n\r\n<p>Supplementary File 3. <a href=\"https://prezi.com/7boa3gjh7ole/more-inclusive-open-science-with-language-workbench-technology/\">Full Prezi: Introduction to Proposal</a></p>",
      "body_md": "**Executive Summary** \r\nWhile most scientists could benefit from using computational tools in their research, many scientists are not sufficiently computationally savvy to use current advanced tools. An ongoing challenge of Open Science is to enable the broadest community of scientists to use the computational tools necessary to formally document analyses, or manage data, and achieve routine reproducibility of analyses. \r\n\r\nLanguage workbench technology (LWT) was pioneered by JetBrains (https://www.jetbrains.com) to facilitate the in-house development of integrated development environments for programmers. In 2004, JetBrains open-sourced the MPS language workbench (https://www.jetbrains.com/mps/) to encourage the adoption of LWT in other domains.  Our team has recently shown that LWT is effective to help biologists and clinicians who are not computer savvy perform data analysis. For instance, tools developed with LWT make it possible to train most biologists and clinicians, in just a few hours, how to analyze data about the expression of genes. We have so far taught close to 200 biologists with languages designed with LWT.\r\n\r\nOur experience strongly suggests that LWT is a methodology that can provide a much needed bridge between non computational scientists and computational experts. LWT can facilitate many activities necessary for a widespread adoption of Open Science, supporting routine and seamless reproducibility of data analysis, as well as allowing more technical freedom to test innovations. Importantly, we believe that with LWT, scientists will find it easier to engage in a more inclusive Open Science.\r\n\r\nWe propose to (1) apply LWT to test novel ideas to record and credit scientists for contributions of software for data analysis and (2) teach the scientific community about this innovative technology. Our prototype will evaluate alternatives to citing only a few software tools in articles. We anticipate that demonstrating these innovations will inspire the design of future scholarly systems and help promote open-science.\r\n\r\n**[Short introduction video](https://www.youtube.com/watch?v=HtN3hwvbR1c)** (5 minutes)\r\n\r\n**Our Team.** Our team is composed of an academic laboratory (Fabien Campagne’s lab, located at the Weill Cornell Medical College, in NYC, USA) and of the JetBrains MPS team (Alexander Shatalin’s group, at JetBrains Inc., Prague, Czech Republic). Our team strongly believes in and supports open-source, data sharing, and facilitating the process of Open Science by developing novel tools that empower engineers and scientists. Members of our team have practiced openness and Open Science for many years: JetBrains Inc. has been a strong industry contributor to open-source (JetBrains repositories have received more than 10,000 stars on GitHub). The Campagne laboratory also has a history of developing open-source bioinformatics software  and has embraced open-access journals [@10.1371/journal.pone.0079871 @10.7717/peerj.241] and preprints [@10.7287/peerj.preprints.112v2] several years ago (both as an author and as a peer-reviewer and editor: Fabien Campagne serves as an associate editor for PeerJ). \r\n\r\n**Open Science.** Open Science is likely to mean different things to different teams. For some, it means practicing science in a completely open way, from early data generation, through data analysis, up to the writing of interpretations for publication in open-access journals, or the deposition of data, and interpretations in  knowledge bases. Some groups, perhaps because they focus on clinical research projects and are cautious about protecting patient populations who do not have scientific or clinical skills, put more insistence on the second half of the scientific process: the publication and data deposition after scientists have built up confidence in their interpretation of the data and summarized the key aspects of the research. For us, Open Science is all these aspects, plus one. We think of Open also as a synonym of Inclusive, and hope for science that is more inclusive of the public, but also more inclusive of scientists across disciplines.\r\n\r\n**Our Long Term Goal.** We strongly believe that Open Science is the future of scientific enquiry and aim to speed up its adoption by making it easier and more desirable to practice Open Science than it is to continue with the status quo. \r\n\r\n**The Challenge.** Many scientists who would like to adopt Open Science processes in their labs face considerable difficulties because Open Science practices require a high amount of technical sophistication. While some individuals have mastered the current tools of Open Science, and championed its practice, we believe that many more scientists are finding it difficult to learn the technical skills that are necessary to open one’s science to the world.  \r\n\r\n**The Innovation.** We propose to apply language workbench technology (LWT), fully supported by the JetBrains open-source [Meta Programming System](https://www.jetbrains.com/mps/) (MPS), to help scientists with the daily practice of Open Science. The Campagne laboratory has recently demonstrated that LWT can be applied to help biologists with limited computational experience perform sophisticated data analyses that would have traditionally required programming or command line skills [@10.1101/030254]. Tools developed with LWT make it possible for biologists to fully participate to data analysis, which promotes inclusive science across disciplines.\r\n\r\n**Preliminary Results.** We have shown that LWT makes it possible to design languages for data analysis ([Figure {n}](#MetaR_Figure)) and reproducible bioinformatics workflows/pipelines ([Figure {n}](#NextflowWorkbench_Figure)) that are easier to teach to biologists and clinicians than traditional approaches (see [@10.1101/030254]). In the [MetaR](http://metar.campagnelab.org/) project, we have designed a simple data analysis language that can be taught to biologists with no programming experience in 2 hours and helps trainees call genes differentially expressed and create heatmap visualizations. We are obtaining similar results teaching NextflowWorkbench to biologists and clinicians (see [Figure {n}](#NextflowWorkbench_Figure), and [@10.1101/041236]). These short training sessions are enabled by LWT and attention to detail during language design.\r\n \r\n[:figure](MetaR_Figure)\r\n\r\n[:figure](NextflowWorkbench_Figure)\r\n\r\nThe Key Advantages of LWT for Data Analysis. LWT has several advantages for Data Analysis:\r\n\r\n1.\tIt can be used to develop computational languages that are easier to teach to biologists and clinicians than programming languages (see Figs 1& 2). LWT makes science more inclusive across disciplines.\r\n2.\tLWT removes the need for monolithic standardization or common specification. Instead, LWT languages can evolve from small individual contributions that work well together by design.\r\n3.\tLanguages can include warning and error messages that warn the analyst about very specific conditions. In contrast to programming languages whose compilers report mostly about low-level syntax errors, LWT errors can be defined in a language to warn the user about high-level semantic problems. Such warnings and errors are extremely useful to guide beginners, or remind expert users about conditions known to cause errors or unreliable results.\r\n4.\tLanguages developed with LWT can include graphical and tabular notations, or interactive user interface elements. This is particularly useful in scientific applications, as illustrated in Figure 1 and Supp File 1 & 2.  \r\n5.\tLanguages developed with LWT can be tightly integrated with other technologies, as shown in Figure 2 with support for docker in the NextflowWorkbench. Such integrations can be presented in a natural way that makes it straightforward for biologists and clinicians to take advantage of otherwise very technical tools and technologies. Biologists who learn NextflowWorkbench need only a 5-minute introduction to docker before they can take advantage of a docker container to write workflows. \r\n6.\tLWT supports source control systems, such as git, in a seamless manner that helps beginners use these tools (see [@10.7287/peerj.preprints.511v2 @10.7717/peerj.800]). Source control is a key component of Open Science. By keeping a trace of source control commits, scientists can document what analysis steps they have taken. They can diagnose and trace back problems while working on a study, retrieve specific versions of an analysis, and can release the commits openly at publication time to enables other scientists and the public to follow and understand how a study has been developed.\r\n\r\n\r\n**LWT for Open Science.** We think that several of the previous points can help scientist open their science because many scientists are struggling with the know-how and minutia required to practice Open Science. As Holly Bik (2015 keynote speaker at the Bioinformatics Open Source Conference) has put it:\r\n\r\n[:figure](HollyBik_Tweet)\r\n\r\nHere, the ability of LWT to integrate many technologies, yet offer a seamless and consistent user interface, may enable completely new ways to develop tools to support Open Science. In this proposal, for instance, we will prototype a new way to record credit and associate it with analysis software. We believe that developing better ways to credit scientists and track contributions automatically could drive an accelerated adoption of Open Science. LWT makes it orders of magnitude faster to prototype such ideas and quickly evaluate their impact than would be possible with other techniques.   \r\n\r\n**Aims.** In this proposal, we will develop a prototype that (1) pioneer new ways to track contributions and crediting contributors of scientific data analyses. This aim will evaluate new ideas to help crediting data analysts for their contributions to scientific studies. It will make it easier for scientists to share LWT analyses while at the same time helping contributors receive due credit for their work. \r\nIn aim (2), we will offer training workshops for LWT at other biomedical institutions. This aim will increase the visibility of this new technology and help accelerate its adoption at universities, medical colleges and biotech companies. One day training workshops will combine the MetaR and NextflowWorkbench training sessions currently taught at the Weill Cornell Medical College and extend them to describe the sharing of data analyses.\r\n\r\n**Originality.** First, this proposal is original because it will use a technology (LWT) that is not widely known, yet is showing promise in addressing some of the pressing challenges of Open Science (e.g., portability, reproducibility, openness and inclusiveness towards the public and scientists in other disciplines). Second, this proposal is original because it aims to advance Open Science by changing how the contributions of individual scientists are recorded, preserved and presented to other scientists and the public.  Our team believes that Open Science will start to become mainstream when a majority of scientists have realized that openness gets them more credit than the alternatives.   \r\n\r\n**Innovations for recording scientific contributions and credit.** We will start working on this aim in Phase I, and will continue to develop and refine the prototype in Phase II. The goal is to demonstrate new ways to (i) record contributions to data analysis in scientific studies and (ii) facilitate crediting scientists and data analysts who have contributed data analysis programs to a study (iii) help scientists and data analysts showcase their contributions and their impact on other studies. \r\n\r\n**Need for the innovation.** We believe that the current approach to acknowledging data analysis contributions in scientific publications is not ideal. A first problem is that crediting somebody currently involves judgment calls that PIs make according to their understanding and appreciation of the work of others. A second problem is that credit is often given in the form of authorship or acknowledgement in a publication, and there is no efficient way for a scientist to gather an exhaustive list of all the studies that have used an analysis script or program. Given that various journals limit the maximum number of citations in an article and considering that some analyses require tens of tools, it may not be surprising that references about programs or data analysis tools are frequently dropped from a citation list.  \r\nApproach: scientific contributions and credit. We will address these problems as follows:\r\n\r\n-\tFirst, we will attach the identity of a data analyst to the programs that they create (analysts will need to opt-in by providing an [ORCID](http://orcid.org/) identifier, or email). Once an analyst has enabled this feature, any analysis or program developed by this analyst will be tagged with contributor meta-data. Contrary to the common practice of signing programs in comment at the top of each file, LWT makes it possible to annotate every statement of an analysis. This is useful to preserve meta-data when statements are copied and pasted across analyses and to automatically merge meta-data for distinct contributions. \r\n-\tSecond, we will implement the ability to publish an analysis to the web and to preserve contribution meta-data in the database. The web front-end will support publishing different versions of an analysis.\r\n-\tThird, to facilitate reuse, we will support downloading analysis programs directly from the web front-end into MPS. \r\n-\tFourth, running an analysis on new data will optionally record usage in the web front-end (no details about the data being processed will be shared). This can be done automatically with LWT because we can control what happens when a user wants to execute an analysis. Records of analysis used and successfully completed with be made in the database and reflected on the web front-end immediately. This will make it possible for scientists to determine the popularity and usage of analysis programs developed with LWT and will help data analysts document the reuse of their contributions. \r\n-\tFifth, the system will offer a unique DOI for each version of a published analysis. This DOI will make it possible for authors to include an electronic reference to a specific analysis in manuscripts, preprints and publications. We will encourage scientists to record this information in their manuscripts during the training workshops. Including the analysis DOI will clearly specify the details of how the analysis was conducted and provide a de facto mean for reviewers and future audience to know exactly how the analysis was conducted. We will work with NCBI to add this type of DOI in Medline data under the [Secondary Source ID](https://www.nlm.nih.gov/bsd/mms/medlineelements.html#si) field. Contributions will be electronically discoverable to enable integration with third-parties (such as [ImpactStory](https://impactstory.org/)).\r\n\r\n**Publishing analyses to the web.** LWT programs will be converted to [Scalable Vector Graphics](https://www.w3.org/TR/SVG/) (SVG) format. SVG is an appropriate format to display LWT programs on the web because it supports graphics as well as text, is a vectorial format that can be printed at arbitrary resolutions, and [is well supported by most modern browsers](http://caniuse.com/#search=svg). SVG documents will be written to a database, either maintained by the team (either by JetBrains Inc. or the Campagne laboratory at the Weill Cornell’s Institute for Computational Biomedicine) or hosted by a cloud provider. A web-front end will be developed to serve the SVG at persistent URLs and provide search functionality over the documents. Deliverables will consist of (i) an MPS plugin that any user of the MPS LW can install. The plugin will support publishing one or more analyses to an SVG repository (in technical terms, we will support publishing arbitrary MPS solutions and languages). (ii) a set of docker containers and deployment instructions to configure a running instance of the public DB and web front-end (this will make it possible for others to host their own repository if they wish to do so). (iii) a running SVG repository, which we will maintain as a demonstration system for a minimum of 5 years.  \r\n\r\n**Technical feasibility.** Writing text programs is currently a mainstream approach for data analysis. When writing an analysis with LWT, users are effectively assembling a data structure (and seeing parts of it in the MPS user interface). We will use this capability to extend these data structure with meta-data about who created and edited the analysis program. Construction of the web front-end has high feasibility because JetBrains is well versed in working with databases and web technology and because MPS already supports an [Application Programming Interface (API) for custom persistence](https://confluence.jetbrains.com/display/MPSD30/Custom+Persistence+Cookbook). Team members with JetBrains will provide expertise in the internal software architecture of MPS that will speed up the prototype. For web publishing of analyses, SVG documents will be rendered from MPS using code similar to that developed for the [Editor2PDF](https://github.com/CampagneLaboratory/Editor2PDF) project (developed by Fabien Campagne to render LWT programs to PDF to inclusion in books and publications). \r\n\r\n**Training workshops.** If we are recipients of a Phase I prize, we will advertise training workshops on the [ISCB](http://www.iscb.org/) mailing list and seek institutions to host workshops. We will also contact directly past trainees who have taken the training at Weill Cornell and have now established their laboratory at other institutions (in the US and Europe). We will give a minimum of 5 one day training workshops (approximately one workshop a month in Phase I). We will aim to offer workshops on a first request basis, but may modify this order to reach a more diverse community in the US and Europe. Training sessions will continue throughout Phase II if we are recipient of the Prize. We will survey trainees post-training to gather feedback about whether the workshops fulfill expectations (see [Figure {n}](#Survey_Figure) for survey questions).  \r\n\r\n**Long-term sustainability.** The MPS LW has been developed as an open-source project and maintained by JetBrains Inc. since 2004. The software is used internally by JetBrains to develop languages that make it easier to develop commercial products of JetBrains. For this reason, the MPS LW is a sustainable, industry funded, open-source project.  All software developed in this project will be released under the Apache 2.0 software license. Any publications about the prototype will be submitted to open-access journals (e.g., PeerJ, PLOS or BMC journals). \r\n\r\n[:figure](Survey_Figure)\r\n\r\nSupplementary File 1. [MetaR and the NextflowWorkbench Video](https://www.youtube.com/watch?v=NnqqsqLkwdQ)\r\n\r\nSupplementary File 2. [NextflowWorkbench Getting Started Video](https://www.youtube.com/watch?v=QHgHezQFKRY)\r\n\r\nSupplementary File 3. [Full Prezi: Introduction to Proposal](https://prezi.com/7boa3gjh7ole/more-inclusive-open-science-with-language-workbench-technology/)",
      "doc_published": "2016-03-01T04:00:23.780973Z",
      "document_id": 16,
      "doi": "10.15363/thinklab.a16",
      "intro_html": "<p>This proposal has been submitted to the <a href=\"http://openscienceprize.org\">Open Science Prize</a>. </p>\r\n\r\n<p>We are also posting the proposal on ThinkLab as a test of the platform. We welcome feedback on this proposal.</p>",
      "intro_md": "This proposal has been submitted to the [Open Science Prize](http://openscienceprize.org). \r\n\r\nWe are also posting the proposal on ThinkLab as a test of the platform. We welcome feedback on this proposal.",
      "title": "",
      "topic_field": "",
      "url": "/p/LWT_FOR_OPEN_SCIENCE/proposal",
      "views": 155
    }
  ],
  "notes": [],
  "profiles": [],
  "retrieved": "2016-10-19T21:03:25.696227Z",
  "threads": [
    {
      "document_id": 16,
      "doi": "10.15363/thinklab.d180",
      "doi_field": null,
      "profile_id": null,
      "published": "2016-03-01T04:00:24.065902Z",
      "subject": "",
      "thread_id": 180,
      "topic_field": "",
      "url": "/doc/16/review",
      "views": 41
    }
  ]
}